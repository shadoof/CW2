#!/bin/bash

# CaveWriting Run-in-Cave Script

LD_LIBRARY_PATH=/share/cavewriting/CW2/linux/lib

if [ "$#" == "0" ]
then
  echo "Usage: $0 [-x] program-name"
  echo "The -x option, means start without opening new xterms for each wall"
  exit 1
fi

if [ "$1" == "-h" ]
then
  echo "Usage: $0 [-x] program-name"
  echo "The -x option, means start without opening new xterms for each wall"
  exit 1
fi

useXT="0"
if [ "$1" == "-x" ]
then
  useXT="1"
  shift
fi

program=/share/cavewriting/CW2/linux/cwapp
shift
workingDir="/share/cavewriting/CW2/linux/"

#serverHost="audio-cave"
serverHost="cave9"

# Pick up the local (uninstalled) version of the server if we're working
# in the VRG3D src directory, otherwise pick up the version installed in $G
if [ -x "obj-server/$serverProg" ]
then
  serverDir="$PWD/obj-server"
else
  serverDir="$G/bin"
fi

./grexec-gcc3 cave9 vrg3d-server.exe cave-devices-audiocave.cfg 4 &
#./grexec-gcc3 fish4 vrg3d-server.exe cave-on-caveaudio &


# vrg3d graphics nodes
clientNodes="left front right floor"
clientSpecificArgs[0]="caveleft-winserv"
clientSpecificArgs[1]="cavefront-winserv"
clientSpecificArgs[2]="caveright-winserv"
clientSpecificArgs[3]="cavefloor-winserv"



# ssh to each client node and start up the gfx program
i=0
for client in $clientNodes
do
  # (using 'env' should work for any shell -asf)
  clientCmd="ssh $client \"cd $workingDir; killall $program; setenv LD_LIBRARY_PATH $LD_LIBRARY_PATH; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH; setenv DISPLAY :0.0; export DISPLAY=:0; $program ${clientSpecificArgs[$i]} $@ $serverHost\""

  if [ "$useXT" == "1" ]
  then
    /usr/bin/X11/xterm -title $client -e /bin/tcsh -c "echo $clientCmd; $clientCmd" &
  else
    /bin/tcsh -c "echo $clientCmd; $clientCmd" &
  fi

  let "i=i+1"
done

